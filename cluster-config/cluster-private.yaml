apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eks-demo-private
  region: us-east-1
  version: "1.32"
  # tags:
  #   karpenter.sh/discovery: eks-demo-private

availabilityZones:
- us-east-1a
- us-east-1b

privateCluster:
  enabled: true

accessConfig:
  authenticationMode: API_AND_CONFIG_MAP
  bootstrapClusterCreatorAdminPermissions: true

iam:
  # withOIDC: true # FIXME: https://github.com/eksctl-io/eksctl/issues/7925

managedNodeGroups:
  - name: mng-1
    amiFamily: AmazonLinux2023
    minSize: 2
    maxSize: 5
    desiredCapacity: 2
    volumeSize: 30
    volumeType: gp3
    instanceTypes:
    - "t3a.medium"
    - "t3.medium"
    enableDetailedMonitoring: true
    privateNetworking: true
    disableIMDSv1: true
    spot: true
    ssh:
      allow: false
    iam:
      attachPolicyARNs:
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
      # (Optional) Only required if you need "EC2 Instance Connect"
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      # (Optional) Only required if you are using "SSM"
      - arn:aws:iam::aws:policy/AmazonSSMPatchAssociation
      # (Optional) Only required if you have "Amazon CloudWatch Observability" setup
      - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess

addons:
  - name: kube-proxy
    version: latest
  - name: vpc-cni
    version: latest
    useDefaultPodIdentityAssociations: true
  - name: coredns
    version: latest
  - name: eks-pod-identity-agent
    version: latest

cloudWatch:
  # ref: https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html
  clusterLogging:
    logRetentionInDays: 90
    enableTypes:
    - "api"
    - "audit"
    - "authenticator"
    - "controllerManager"
    - "scheduler"
